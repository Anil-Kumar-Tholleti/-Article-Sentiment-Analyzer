import streamlit as st
import requests
from bs4 import BeautifulSoup
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer

def fetch_article_text(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, 'html.parser')
        paragraphs = soup.find_all('p')
        article_text = ' '.join([para.get_text() for para in paragraphs])
        return article_text
    except requests.exceptions.RequestException as e:
        return f"Error fetching the article: {e}"

def analyze_sentiment_vader(text):
    analyzer = SentimentIntensityAnalyzer()
    sentiment_scores = analyzer.polarity_scores(text)
    compound_score = sentiment_scores['compound']
    if compound_score >= 0.05:
        return "Positive"
    elif compound_score <= -0.05:
        return "Negative"
    else:
        return "Neutral"

# Streamlit UI
st.set_page_config(page_title="Article Sentiment Analyzer", layout="centered")
st.title("ðŸ“° Article Sentiment Analyzer")

url = st.text_input("Enter the article URL:")

if url:
    with st.spinner("Fetching and analyzing the article..."):
        article_text = fetch_article_text(url)
        if article_text.startswith("Error"):
            st.error(article_text)
        else:
            sentiment = analyze_sentiment_vader(article_text)
            st.subheader("Sentiment Result:")
            st.success(f"The sentiment of the article is **{sentiment}**")
            with st.expander("Show article text"):
                st.write(article_text)
